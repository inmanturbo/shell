#!/usr/bin/env bash
# Toggle or check OPcache mode for Laravel Valet (Linux)

set -e

PHPV=$(php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;')
CONF_DIR="/etc/php/$PHPV/fpm/conf.d"

dev_ini="$CONF_DIR/10-opcache-dev.ini"
prod_ini="$CONF_DIR/10-opcache-prod.ini"
active_ini="$CONF_DIR/10-opcache.ini"

usage() {
  echo "Usage: $(basename "$0") [install [--force]|dev|prod|status]"
  echo "  install       Create dev/prod OPcache configs for current PHP version"
  echo "  install --force  Overwrite existing dev/prod configs"
  echo "  dev           Switch to development-friendly OPcache settings"
  echo "  prod          Switch to production OPcache settings"
  echo "  status        Show current OPcache settings"
  exit 1
}

write_ini_file() {
  local file="$1"
  local content="$2"

  if [[ -f "$file" && "$FORCE" != "1" ]]; then
    echo "Skipped existing: $file"
  else
    echo "Creating: $file"
    echo "$content" | sudo tee "$file" >/dev/null
  fi
}

install_configs() {
  echo "Installing OPcache configs for PHP $PHPV..."

  # dev config
  write_ini_file "$dev_ini" "$(cat <<'INI'
zend_extension=opcache

; Dev-friendly: auto-picks up file changes
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=256
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=20000
opcache.validate_timestamps=1
opcache.revalidate_freq=2
opcache.save_comments=1
opcache.fast_shutdown=1
opcache.jit=0
opcache.jit_buffer_size=0
INI
)"

  # prod config
  write_ini_file "$prod_ini" "$(cat <<'INI'
zend_extension=opcache

; Max performance: don't check timestamps
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=256
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=40000
opcache.validate_timestamps=0
opcache.revalidate_freq=0
opcache.save_comments=1
opcache.fast_shutdown=1
opcache.jit=0
opcache.jit_buffer_size=0
INI
)"

  # If active symlink doesn't exist, point to dev
  if [[ ! -L "$active_ini" ]]; then
    sudo ln -sf "$dev_ini" "$active_ini"
    echo "Linked $active_ini to $dev_ini"
  fi

  sudo systemctl restart "php$PHPV-fpm"
  echo "OPcache configs installed. Active mode: DEV"
}

case "$1" in
  install)
    FORCE=0
    if [[ "$2" == "--force" ]]; then
      FORCE=1
      echo "Force overwrite enabled."
    fi
    install_configs
    ;;
  dev)
    sudo ln -sf "$dev_ini" "$active_ini"
    echo "Switched OPcache to DEV settings."
    ;;
  prod)
    sudo ln -sf "$prod_ini" "$active_ini"
    echo "Switched OPcache to PROD settings."
    ;;
  status)
    echo "PHP $PHPV OPcache status:"
    php -i | grep -iE 'opcache.enable|validate_timestamps|revalidate_freq|jit'
    exit 0
    ;;
  *)
    usage
    ;;
esac

# Clear Laravel caches if artisan exists
if [[ -f artisan ]]; then
  echo "Clearing Laravel caches..."
  php artisan optimize:clear >/dev/null 2>&1 || true
fi

# Reload PHP-FPM
sudo systemctl reload "php$PHPV-fpm" || sudo systemctl restart "php$PHPV-fpm"
echo "PHP-FPM reloaded."
